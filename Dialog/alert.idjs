
await alert("Alert message.", "warn");
await alert("Info message.", "info");
await alert("Unglaublich: Mit munterer Müdigkeit mehrfach gestrandet, eilen kabellose Kapuziner kantigen Kaufmannschaften hinterher. Greift da etwa die öde Haubitze nach Keimzellen kläglicher Katastralgemeinden.");


async function alert(msg, type) {

	if(!msg || msg.constructor !== String) {
		msg = "";
	}
	if(!type || type.constructor !== String) {
		type = "";
	}

	let dialogElem = document.getElementById("uxp-custom-alert");
	if(!dialogElem) {
		dialogElem = createAlertDialog("uxp-custom-alert");
	}
	
	let backgroundColor;

	switch(type.toLowerCase()) {
		case "warn":
			backgroundColor = 'lightcoral';
			break;
		case "info":
			backgroundColor = 'lightgreen ';
			break;
		default:
			backgroundColor = 'initial';
	}

	dialogElem.style.backgroundColor = backgroundColor;

	if(backgroundColor === 'initial'){
		if(app.generalPreferences.uiBrightnessPreference <= 0.5) {
			dialogElem.style.color = "white";
		} else {
			dialogElem.style.color = "black";
		}
	}

	let msgElem = dialogElem.querySelector('#uxp-custom-alert-message');
	if(!!msgElem) {
		msgElem.textContent = msg;
	}
	
	await dialogElem.showModal();

	return dialogElem;
}

/**
 * Create dialog
 * @returns {Element}
 */
function createAlertDialog(dialogID) {

	if(!dialogID || dialogID.constructor !== String) {
		dialogID = "uxp-custom-dialog";
	}

	const styles = `
		dialog {
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			min-height: 80px;
			max-height: 800px;
			min-width: 200px;
			max-width: 400px;
			padding: 30px 40px 20px 40px;
			color: inherit;
		}
		#uxp-custom-alert-message {
			margin-bottom: 2rem;
			font-size: 1rem;
		}
	`;

	const template = `
		<p id="uxp-custom-alert-message"></p>
		<sp-button id="uxp-custom-alert-close-button">OK</sp-button>
	`;

	const styleElem = document.createElement('style');
	const stylesTextNode = document.createTextNode(styles);
	styleElem.appendChild(stylesTextNode);

	const headElem = document.querySelector('head');
	headElem.appendChild(styleElem);

	const dialogElem = document.createElement('dialog');
	dialogElem.setAttribute('id', dialogID);
	dialogElem.innerHTML = template;

	document.body.appendChild(dialogElem);

	const buttonElem = dialogElem.querySelector('#uxp-custom-alert-close-button');
	buttonElem.addEventListener('click', evt => {
		dialogElem.close();
	});
	
	return dialogElem;
}